version: '3'

# Define services
services:

  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Forward the exposed port 5000 on the container to port 5000 on the host machine
    restart: unless-stopped
    depends_on:
      - postgres # This service depends on postgres. Start that first.
    environment: # Pass environment variables to the service
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      SERVER_PORT: ${SERVER_PORT:-5000}
      SERVER_READ_TIMEOUT: ${SERVER_READ_TIMEOUT:-60}
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Postgres Service
  postgres:
    container_name: avitoad-postgres
    image: postgres:13.3-alpine # Use an alpine image to build the postgres service
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./internal/database/migrations/000001_create_init_tables.up.sql:/docker-entrypoint-initdb.d/000001_create_init_tables.up.sql
    ports:
      - "5432:5432"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres: